{"version":3,"file":"mat-breadcrumb.js","sources":["ng://mat-breadcrumb/lib/mat-breadcrumb.service.ts","ng://mat-breadcrumb/lib/mat-breadcrumb.component.ts","ng://mat-breadcrumb/lib/mat-breadcrumb.module.ts","ng://mat-breadcrumb/public-api.ts","ng://mat-breadcrumb/mat-breadcrumb.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Breadcrumb } from './breadcrumb.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatBreadcrumbService {\n\n  public breadcrumbLabels: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n  public newBreadcrumb: BehaviorSubject<Breadcrumb[]> = new BehaviorSubject<Breadcrumb[]>([]);\n\n  constructor() { }\n\n  updateBreadcrumbLabels(labels: any) {\n    this.breadcrumbLabels.next(labels);\n  }\n\n  updateBreadcrumb(newBreadcrumb: Breadcrumb[]) {\n    this.newBreadcrumb.next(newBreadcrumb);\n  }\n\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Breadcrumb } from './breadcrumb.model';\nimport { MatBreadcrumbService } from './mat-breadcrumb.service';\nimport { ActivatedRoute, Router, NavigationEnd, PRIMARY_OUTLET, RoutesRecognized } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { map, mergeMap } from 'rxjs/internal/operators';\n\n@Component({\n  selector: 'lib-mat-breadcrumb',\n  template: `\n  <mat-toolbar class=\"mat-bread-crumb\" [ngStyle]=\"{'background-color': bgColor}\">\n  <mat-list class=\"mat-bread-crumb-list\" *ngIf=\"breadcrumb.length\">\n      <mat-list-item>\n          <span class=\"mat-bread-crumb-spacer\">\n              <span *ngFor=\"let item of breadcrumb; let i = index\">\n                  <a *ngIf=\"item?.url\" [routerLink]=\"item?.url\" class=\"mat-bread-crumb-list-item\" [ngStyle]=\"{'font-size': fontSize}\" [ngStyle]=\"{'color': fontColor}\">{{ item.label }}</a>\n                  <span *ngIf=\"!item?.url\" class=\"mat-bread-crumb-list-item\" [ngStyle]=\"{'font-size': fontSize}\"  [ngStyle]=\"{'color': lastLinkColor}\">{{ item.label }}</span>\n                  <span *ngIf=\"breadcrumb.length !== i+1\">{{symbol}}</span>\n              </span>\n          </span>\n      </mat-list-item>\n  </mat-list>\n</mat-toolbar>\n  `,\n  styleUrls: ['./mat-breadcrumb.component.css']\n})\nexport class MatBreadcrumbComponent implements OnInit {\n\n  breadcrumb: Breadcrumb[] = [];\n  @Input() bgColor = '#eee';\n  @Input() fontSize = '18px';\n  @Input() fontColor = '#0275d8';\n  @Input() lastLinkColor = '#000';\n  @Input() symbol = ' / ';\n  params: { [key: string]: any; };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private ng7MatBreadcrumbService: MatBreadcrumbService\n  ) {\n    this.breadCrumbData();\n  }\n\n  ngOnInit() {\n    this.ng7MatBreadcrumbService.breadcrumbLabels.subscribe((labelData) => {\n      for (const label in labelData) {\n        if (labelData.hasOwnProperty(label)) {\n          this.breadcrumb.map((crumb) => {\n            const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\n            if (labelParams) {\n              for (const labelParam of labelParams) {\n                const dynamicData = labelData[label];\n                if (labelParam === label) {\n                  crumb.label = crumb.label.replace('{{' + labelParam + '}}', dynamicData);\n                }\n              }\n            }\n          });\n        }\n      }\n    });\n\n    this.ng7MatBreadcrumbService.newBreadcrumb.subscribe((breadcrumb: Breadcrumb[]) => {\n      this.updateData(this.activatedRoute, breadcrumb);\n    });\n  }\n\n  breadCrumbData(): void {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .pipe(map(() => this.activatedRoute))\n      .pipe(map((route) => {\n        while (route.firstChild) { route = route.firstChild; }\n        return route;\n      }))\n      .pipe(filter(route => route.outlet === PRIMARY_OUTLET))\n      .subscribe(route => {\n        this.params = route.snapshot.params;\n        this.updateData(route, null);\n      });\n  }\n\n  private updateData(route, newBreadcrumb): void {\n    if (route.snapshot.data.breadcrumb || newBreadcrumb) {\n      const data = route.snapshot.data.breadcrumb ? route.snapshot.data.breadcrumb : newBreadcrumb;\n      const breadcrumb = (JSON.parse(JSON.stringify(data)));\n      breadcrumb.map((crumb) => {\n\n        const urlChunks = crumb.url.split('/');\n        for (const chunk of urlChunks) {\n          if (chunk.includes(':')) {\n            const paramID = chunk.replace(':', '');\n            const routerParamID = this.params[paramID];\n            crumb.url = crumb.url.replace(`:${paramID}`, routerParamID);\n          }\n        }\n\n        const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\n        if (labelParams) {\n          for (const labelParam of labelParams) {\n            const routerParamID = this.params[labelParam.trim()];\n            if (routerParamID) {\n              crumb.label = crumb.label.replace('{{' + labelParam + '}}', routerParamID);\n            } else {\n            }\n          }\n        }\n\n      });\n      this.breadcrumb = breadcrumb;\n    } else {\n      this.breadcrumb = [];\n    }\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { MatBreadcrumbComponent } from './mat-breadcrumb.component';\n\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\n\n\n@NgModule({\n  declarations: [MatBreadcrumbComponent],\n  imports: [\n    RouterModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatListModule\n  ],\n  exports: [MatBreadcrumbComponent]\n})\nexport class MatBreadcrumbModule { }\n","/*\n * Public API Surface of mat-breadcrumb\n */\n\nexport * from './lib/mat-breadcrumb.service';\nexport * from './lib/mat-breadcrumb.component';\nexport * from './lib/mat-breadcrumb.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}