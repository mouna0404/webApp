{"version":3,"file":"tooltip.component.d.ts","sources":["tooltip.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ViewContainerRef, Renderer2, Injector } from '@angular/core';\nimport { IComponentBase } from '@syncfusion/ej2-angular-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\nexport declare const inputs: string[];\nexport declare const outputs: string[];\nexport declare const twoWays: string[];\n/**\n * Represents the Angular Tooltip component that displays a piece of information about the target element on mouse hover.\n * ```html\n * <ejs-tooltip content='Tooltip content'>Show Tooltip</ejs-tooltip>\n * ```\n */\nexport declare class TooltipComponent extends Tooltip implements IComponentBase {\n    private ngEle;\n    private srenderer;\n    private viewContainerRef;\n    private injector;\n    containerContext: any;\n    tagObjects: any;\n    afterClose: any;\n    afterOpen: any;\n    beforeClose: any;\n    beforeCollision: any;\n    beforeOpen: any;\n    beforeRender: any;\n    created: any;\n    destroyed: any;\n    /**\n     * It is used to display the content of Tooltip which can be both string and HTML Elements.\n     * Refer the documentation [here](https://ej2.syncfusion.com/documentation/tooltip/content/)\n     *  to know more about this property with demo.\n     *\n     * {% codeBlock src=\"tooltip/content-api/index.ts\" %}{% endcodeBlock %}\n     *\n     *\n     */\n    content: any;\n    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    ngAfterContentChecked(): void;\n    registerEvents: (eventList: string[]) => void;\n    addTwoWay: (propList: string[]) => void;\n}\n"]}