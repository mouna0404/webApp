import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export class Ng7MatBreadcrumbService {
    constructor() {
        this.breadcrumbLabels = new BehaviorSubject([]);
        this.newBreadcrumb = new BehaviorSubject([]);
    }
    updateBreadcrumbLabels(labels) {
        this.breadcrumbLabels.next(labels);
    }
    updateBreadcrumb(newBreadcrumb) {
        this.newBreadcrumb.next(newBreadcrumb);
    }
}
Ng7MatBreadcrumbService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.1.1", ngImport: i0, type: Ng7MatBreadcrumbService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
Ng7MatBreadcrumbService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.1.1", ngImport: i0, type: Ng7MatBreadcrumbService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.1.1", ngImport: i0, type: Ng7MatBreadcrumbService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmc3LW1hdC1icmVhZGNydW1iLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZzctbWF0LWJyZWFkY3J1bWIvc3JjL2xpYi9uZzctbWF0LWJyZWFkY3J1bWIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBTXZDLE1BQU0sT0FBTyx1QkFBdUI7SUFLbEM7UUFITyxxQkFBZ0IsR0FBMkIsSUFBSSxlQUFlLENBQVEsRUFBRSxDQUFDLENBQUM7UUFDMUUsa0JBQWEsR0FBa0MsSUFBSSxlQUFlLENBQWUsRUFBRSxDQUFDLENBQUM7SUFFNUUsQ0FBQztJQUVqQixzQkFBc0IsQ0FBQyxNQUFXO1FBQ2hDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELGdCQUFnQixDQUFDLGFBQTJCO1FBQzFDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7O29IQWJVLHVCQUF1Qjt3SEFBdkIsdUJBQXVCLGNBRnRCLE1BQU07MkZBRVAsdUJBQXVCO2tCQUhuQyxVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEJyZWFkY3J1bWIgfSBmcm9tICcuL2JyZWFkY3J1bWIubW9kZWwnO1xyXG5cclxuQEluamVjdGFibGUoe1xyXG4gIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTmc3TWF0QnJlYWRjcnVtYlNlcnZpY2Uge1xyXG5cclxuICBwdWJsaWMgYnJlYWRjcnVtYkxhYmVsczogQmVoYXZpb3JTdWJqZWN0PGFueVtdPiA9IG5ldyBCZWhhdmlvclN1YmplY3Q8YW55W10+KFtdKTtcclxuICBwdWJsaWMgbmV3QnJlYWRjcnVtYjogQmVoYXZpb3JTdWJqZWN0PEJyZWFkY3J1bWJbXT4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0PEJyZWFkY3J1bWJbXT4oW10pO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICB1cGRhdGVCcmVhZGNydW1iTGFiZWxzKGxhYmVsczogYW55KSB7XHJcbiAgICB0aGlzLmJyZWFkY3J1bWJMYWJlbHMubmV4dChsYWJlbHMpO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlQnJlYWRjcnVtYihuZXdCcmVhZGNydW1iOiBCcmVhZGNydW1iW10pIHtcclxuICAgIHRoaXMubmV3QnJlYWRjcnVtYi5uZXh0KG5ld0JyZWFkY3J1bWIpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19